name: shell commands
on: 
  # schedule:
  #   - cron: "*/5 * * * *"
  # You can call invoke this workflow api - need github roken with repo scope
  # repository_dispatch:
  #   types: 
  #     - this_is_arbitrary
  #     - execute
  push:
    branches:
      - master
      - "actions-practice-*"
      - "actions-practice-*/*"
      - "actions-practice-*/**"
      - "!actions-practice-*/roguebranch"
    tags:
      - "v1*"
    paths-ignore:
      - 'rogue.js'
  pull_request:
    types: 
      - opened
      - synchronize
      - closed
      - reopened
env:
  WORKFLOW_VAR: "At workflow level, variables are available to jobs and steps and others"
jobs:
  checkout-job:
    env:
      JOB_VAR: "At job level, variables are avialable to the current job and steps with in"
    runs-on: ubuntu-latest
    if: contains('Hello world', 'llo')
    steps:
      - name: checkout git repo
        env:
          STEP_VAR: "At step level, variables are avialable only to the current step"
        uses: actions/checkout@v2
        with:
          ref: master
  mac-jobs:
    runs-on: macos-latest
    if: always()
    timeout-minutes: 10
    steps:
      - name: echo step
        run: |
          echo "helloworld"
          echo "WORKFLOW_VAR: ${WORKFLOW_VAR}"
          echo "JOB_VAR (wont work here): ${JOB_VAR}"
          echo "STEP_VAR (wont work here): ${STEP_VAR}"
      - name: multiline step
        continue-on-error: true
        run: |
          node -v
          npm -v
          date
  windows-job:
    runs-on: windows-latest
    if: github.event_name == 'push'
    needs: ["mac-jobs", "checkout-job"]
    steps:
      - name: windows_commands
        run: |
          ipconfig
          dir
        shell: cmd
  actions-job:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: run a third party action
        id: js-action
        uses: actions/hello-world-javascript-action@v1
        with: 
          who-to-greet: pusa
      - name: get a value from above step
        run: echo "${{ steps.js-action.outputs.time }}"
      - name: get secret var
        run: echo "${{ secrets.TEST }}"
  pull-request-comment-job:
    runs-on: ubuntu-18.04
    if: github.event_name == 'pull_request'
    needs: ["actions-job"]
    steps: 
      - name: run a third party action
        id: js-action
        uses: actions/hello-world-javascript-action@v1
        with: 
          who-to-greet: pusa
      - name: Add a comment
        id: github_pull_req_comment
        env:
          STDOUT: "```${{ steps.js-action.outputs.stdout }}```"
        uses: actions/github-script@0.9.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: process.env.STDOUT
            })
  # semantic-version-job:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout git and add a incremental version file
  #       id: semantic
  #       run: |
  #         git init
  #         git remote add origin "https://$GITHUB_ACTOR:${{ secrets.gitrepo_practice }}@github.com/$GITHUB_REPOSITORY.git"
  #         git config --global user.email "bot@bot.com"
  #         git config --global user.name "bot"
  #         git fetch
  #         branch_name=`echo $GITHUB_REF | awk -F "/" '{print $3}'`
  #         git checkout $branch_name
  #         git branch --set-upstream-to=origin/$branch_name
  #         git pull
  #         echo feature-RANDOM > version.txt
  #         git add *
  #         git commit -m "version updated in feature branch"
  #         git push

          